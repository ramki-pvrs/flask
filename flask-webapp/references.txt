Notes:
 - Separation of concerns
 - collections of modules, services or classes
 - Single-responsibility principal
 - Blueprints - Flask equivalent of python modules
 - Blueprints encapsulate feature-sized sections
     - keep related logic and assets grouped and separated from one another
     - similar to webpack


https://towardsdatascience.com/use-flask-and-sqlalchemy-not-flask-sqlalchemy-5a64fafe22a4

https://www.learndatasci.com/tutorials/using-databases-python-postgres-sqlalchemy-and-alembic/

https://dev.to/kaelscion/authentication-hashing-in-sqlalchemy-1bem

#https://hackersandslackers.com/flask-application-factory
#http://allynh.com/blog/reusing-flask-sql-alchemy-code-between-multiple-applications/
#http://allynh.com/blog/adding-an-api-to-your-flask-project/
#https://testdriven.io/blog/flask-contexts-advanced/
#https://overiq.com/flask-101/application-structure-and-blueprint-in-flask/

#https://stackoverflow.com/questions/54444776/how-can-i-break-up-a-flask-blueprint-into-multiple-files-within-a-subfolder

#https://stackoverflow.com/questions/37139786/is-init-py-not-required-for-packages-in-python-3-3

#setup tools
https://flask.palletsprojects.com/en/1.1.x/patterns/packages/

#how to run flask app
https://www.twilio.com/blog/how-run-flask-application

#lessc
https://pypi.org/project/lessc/
